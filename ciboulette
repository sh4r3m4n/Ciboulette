#!/bin/bash
#
#	Ciboulette una red social 100% libre, descentralizada y entre pares
#	version 0.2
#	AGPLv3+ © bazza
#

#---------------------- funciones graficas -----------------
function opciones {
	while getopts t:m: OPCION; do
	        case $OPCION in
	                t) TITULO=${OPTARG}
	                ;;
	                m) MENSAJE=${OPTARG}
	                ;;
	        esac
	done
	# parametros
	N=0
	for T in $(cat /dev/stdin); do
		T=$(echo $T | sed 's/_/\ /g')
		C="$C $N \"$T\""
		N=$(($N+1))
	done
	# genera el menu
	eval "zenity --title \"$TITULO\" --text \"$MENSAJE\" --list --height=250 --column \"\" --column \"\" --hide-column 1  --hide-header $C"
}

function error {
	zenity --error --text="$*"
}
function alerta {
	zenity --warning --text="$(cat /dev/stdin)"
}
function clave {
	zenity --title "Clave" --text "Introducir la clave" --entry --entry-text="$*"
}
function url {
	zenity --title "URL" --text "Dirección" --entry --entry-text="$*"
}
function titulo {
	zenity --title "Titulo" --text "¿Sobre que vas a hablar?" --entry --entry-text="$*"
}
function archivo {
	zenity --title "Elije el archivo" --file-selection
}
function archivos {
	echo -e "$(zenity --title "Archivos" --text="Elije los archivos" --file-selection --multiple --separator="\n" \
	|| error "si necesita un archivo" && exit)"
}
function mensaje {
	zenity --title "Mensaje" --text="Escribe el mensaje" --width=450 --height=350 --text-info --editable
}
function mostrar {
	# mensaje de entrada
	MENSAJE=`cat /dev/stdin`
	if [ "$(echo "$MENSAJE" | wc -l )" == "1" ]; then
		zenity --title "Mensaje decifrado" --width=450 --text="$*" --entry --entry-text="$MENSAJE"
	else
		echo "$MENSAJE" | zenity --title "Mensaje decifrado" --text="$*" --width=450 --height=350 --text-info
	fi
	echo "$MENSAJE" | xsel -i
}
function progreso {
	pid=`mktemp`
	zenity --progress --pulsate --auto-close --title "Espere por favor..." --text="$*" & echo $! > $pid
	cat /dev/stdin
	kill `cat $pid`
}
function blogear {
	cd ~/.ciboulette/
	chronicle --config ~/.ciboulette/config
	cp index.rss index.html
}

function servidor_inicio {
	# inicia el servidor
	rm -f /tmp/ciboulette.pid
	# Si corremos arch
	[ "$(uname -r | grep ARCH)" ] && SERVER=/usr/bin/mini_httpd || SERVER=/usr/sbin/mini-httpd
	$SERVER -i /tmp/ciboulette.pid -p 4232 -d ~/.ciboulette -T "UTF8" -c ~/.ciboulette/cgi-bin/
}
function servidor_matar {
	# matar el servidor
	[ -f /tmp/ciboulette.pid ] && kill "$(cat /tmp/ciboulette.pid)" 2> /dev/null
}

function nodo_agregar {
	URL=`cat /dev/stdin`
	torify rawdog -d ~/.ciboulette/novedades/ -a "$URL" 2> /dev/null
}
function nodo_borrar {
	URL=`cat /dev/stdin`
	torify rawdog -d ~/.ciboulette/novedades/ -r "$URL" 2> /dev/null
}
function nodos_lista {
	torify rawdog -d ~/.ciboulette/novedades/ -l 2> /dev/null
}
function nodos_actualizar {
	torify rawdog -d ~/.ciboulette/novedades/ -wu 2> /dev/null
}


while getopts a:b:n:skdlhiuw OPCION; do
	case $OPCION in
               a)
			echo "Publicando articulo"
			TITULO=${OPTARG}
			TEXTO=`cat /dev/stdin`
			echo -e "Title: $TITULO\n\n$TEXTO" > ~/.ciboulette/md/$(echo $TITULO |sed 's/\ /_/g;s/[^a-zA-Z0-9_]//g').md
			blogear
			exit
                ;;
                w) blogear; exit
                ;;
                n) echo ${OPTARG} | nodo_agregar; exit
                ;;
                b) echo ${OPTARG} | nodo_borrar; exit
                ;;
                l) nodos_lista; exit
                ;;
                d) nodos_actualizar; exit
                ;;
                s) servidor_matar
		   servidor_inicio
		 exit
                ;;
                k)
			servidor_matar; exit
                ;;
	u)
		NOMBRE=`basename $0`
        	AUTOR="b4zz4"
		REPO="Ciboulette"
		ZIP="master"
		cd /tmp
		# unificar estas dos lineas
		wget https://github.com/$AUTOR/$REPO/archive/$ZIP.zip -O master.zip
		rm -r $REPO-$ZIP/
		unzip master.zip
		cd $REPO-$ZIP/
		chmod +x $NOMBRE
		./$NOMBRE -i && echo "actualizado"
		exit
	;;
	h)
		echo "$(basename $0) $(cat ~/.ciboulette/hostname)"
		echo
		echo "  -h | esta ayuda"
		echo "  -i | instalación"
		echo "  -w | actualizar tu ciboulette"
		echo "  -s | iniciar el servidor"
		echo "  -k | matar el servidor"
		echo "  -a [titulo texto] | agregar articulo"
		echo "  -n [url del nodo] | agregar nodo"
		echo "  -d | actualizar noticias"
		echo "  -b [url del nodo] | borrar nodo"
		echo "  -l | lisa de nodos "
		echo "  -u Actualizar la aplicación"
		exit
	;;
	i)
		NOMBRE=`basename $0`
		echo -e "[Desktop Entry]\nName=$NOMBRE\nDescription=Red Social 100% Libre\nIcon=help-faq\nType=Application\nExec=$NOMBRE\nCategories=GTK;Utility;" > /tmp/$NOMBRE.desktop
		# dependencias
		TMP=$(mktemp)

		# verifica el sistema operativo
		if [ "$(which yum)" ]; then
			aptitude="yum -y install"
		elif [ "$(which pacman)" ]; then
			aptitude="yaourt -S"
		else
			aptitude="apt-get -y install"
		fi
		if [ "$(which gksu)" ]; then
			gksu="gksu"
		else
			gksu="su -c"
		fi

		# Crea el directorio local y temas

		mkdir -p ~/.$NOMBRE/md 2> /dev/null
		cp -r config ~/.$NOMBRE/
		cp -r favicon.ico ~/.$NOMBRE/
		FEED="$(cat ~/.$NOMBRE/novedades/config | grep "^feed ")"
		cp -r novedades ~/.$NOMBRE/
		echo "$FEED" >> ~/.$NOMBRE/novedades/config

                # comprueba si esta instalando o actualizando
                if [ ! "$(cat ~/.ciboulette/hostname)" ]; then
                        # agrega tu nombre de usuario por defecto
                        echo "blog_title = `whoami`" >> ~/.$NOMBRE/config
                fi

		echo "output = $HOME/.$NOMBRE" >> ~/.$NOMBRE/config
		echo "input = $HOME/.$NOMBRE/md" >> ~/.$NOMBRE/config

		touch ~/.$NOMBRE/hostname


		# en Mint, Debian, Fedora (?)
		PACKAGES="mini-httpd tor torsocks zenity chronicle rawdog libtext-markdown-perl"

		# en Arch
	        if [ "$(uname -r | grep ARCH)" ]; then
			PACKAGES="mini_httpd tor torsocks zenity chronichle rawdog perl-text-markdown python2-feedparser"
	        fi

		echo "$aptitude $PACKAGES
		echo 'HiddenServiceDir /var/lib/tor/${NOMBRE}/' >> /etc/tor/torrc
		echo 'HiddenServicePort 80 127.0.0.1:4232' >> /etc/tor/torrc
		cp $NOMBRE /usr/local/bin/
		systemctl restart tor
		/etc/init.d/tor restart
		cp /tmp/$NOMBRE.desktop /usr/share/applications/$NOMBRE.desktop
		sleep 10
		cat "/var/lib/tor/${NOMBRE}/hostname" > /tmp/hostname" > $TMP

	        echo "Se necesita autenticación como superusuario para instalar los paquetes. Debe proporcionar la contraseña de root"
		$gksu "bash $TMP"
		rm $TMP

		mkdir ~/.config/autostart/ 2> /dev/null
 		echo -e "[Desktop Entry]\nName=$NOMBRE\nDescription=Red Social 100% Libre\nIcon=help-faq\nType=Application\nExec=$NOMBRE -s\nCategories=GTK;Utility;" > ~/.config/autostart/$NOMBRE.desktop

		echo "http://$(cat /tmp/hostname)" > ~/.$NOMBRE/hostname

		echo
		echo "Tu dirección de Ciboulette es $(cat ~/.${NOMBRE}/hostname)"
		# inicia el servidor
		$NOMBRE -s &
		$NOMBRE -w
		$NOMBRE -d
		(crontab -l | grep -v "# Ciboulette"; echo '*/5  * * * * /usr/local/bin/ciboulette -d # Ciboulette';) | crontab -
		exit
		;;
	esac
done



# -------------------------- Wizard ----------------------------------

# ¿Que queres hacer?
MENU=`echo  "Publicar_un_articulo Avatar Perfil Leer_novedades Agrega_nodo_amigo Iniciar_Ciboulette Matar_Ciboulette" | opciones -t "Ciboulette" -m "¿Que queres hacer? - $(cat ~/.ciboulette/hostname)"`
case $MENU in
		0 )
			# Publicar articulo
			TITULO="$(titulo)"
			mensaje | ciboulette -a "$TITULO"
			xdg-open "http://127.0.0.1:4232"
		;;
		1 )
			# Imagen del perfil
			ARCHIVO=$(archivo "Imagen del perfil")
			convert "$ARCHIVO" -resize 16x16 ~/.ciboulette/favicon.ico
			convert "$ARCHIVO" -resize 128x128 ~/.ciboulette/avatar.png
		;;
		2)
			# Configuración del perfil
			xdg-open ~/.ciboulette/config
		;;
		3)
			# Novedades
			xdg-open "http://127.0.0.1:4232/novedades/"
		;;
		4)
			# Agregar nodo
			URL=$(url)
			ciboulette -n "$URL"
		;;
		5)
			# Inicia al servidor
			ciboulette -s
		;;
		6)
			# Mata el servidor
			ciboulette -k
		;;
esac
