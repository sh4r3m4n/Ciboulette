#!/bin/bash
#
#	instalacion para Mint, Ubuntu, Debian y similares
#

BACKUP=".ciboulette.backup"

# -------------------- ser root -----------------------

[ ! "$(id -u)" == "0" ] && echo "Necesitas permiso de root, ejemplo: sudo $0" && exit

# -------------------- backup del servicio oculto -----------------------

tar -cf /var/lib/tor/ciboulette /tmp/ciboulette-backup.tar

# -------------------- dependencias -----------------------

# verifica el sistema operativo (no sirve para nada)
[ "$(which yum)" ] && aptitude="yum -y install"
[ "$(which yaourt)" ] && aptitude="yaourt -S"
[ "$(which apt-get)" ] && aptitude="apt-get -y install"

DEPENENCIAS="mini-httpd tor torsocks prosody nanoblogger rawdog tidy markdown python2-feedparser qrencode imagemagick zenity libnotify-bin"

echo "$DEPENENCIAS" | sed 's/\ /\n/g' | while read i; do
	[ ! "$(which $i)" ] && $aptitude $i
done

# -------------------- dependencias -----------------------

service resolvconf stop 2> /dev/null

type shopt &>/dev/null && shopt -s nullglob

# agrega la configuracion a dhcp y dhcpX
for N in /etc/dhcp*/dhclient.conf /etc/dhclient.conf; do
	if [ ! -f $N ]; then
		grep '#ciboulette' $N || cp $N $N$BACKUP
		sed -e "s/^prepend\ domain-name-servers.*$/#&\nprepend domain-name-servers 127.0.0.1,37.235.52.191,69.164.196.21,208.115.243.35,208.115.243.38; #ciboulette/" -i $N
		# falta el si no existe la linea la agrega
		#echo "request subnet-mask, broadcast-address, time-offset, routers,
	        #domain-name, domain-name-servers, domain-search, host-name,
	        #dhcp6.name-servers, dhcp6.domain-search,
	        #netbios-name-servers, netbios-scope, interface-mtu,
		#rfc3442-classless-static-routes, ntp-servers;" >> $N
	fi
done

# Agregar la linea solo si no existe
[ -f /etc/resolv.conf.head ] && grep '#ciboulette' /etc/resolv.conf.head || cp /etc/resolv.conf.head /etc/resolv.conf.head$BACKUP && echo "nameserver 127.0.0.1 #ciboulette" >> /etc/resolv.conf.head

service resolvconf start 2> /dev/null

# -------------------- tor -----------------------

# hace un backup antes de instalar ciboulette
[ ! "$(grep '#ciboulette' /etc/tor/torrc)" ] && cp /etc/tor/torrc /etc/tor/torrc$BACKUP

# configuracion de tor sin ciboulette
cat /etc/tor/torrc | grep -v "\(^DNSPort\|^VirtualAddrNetwork\|^AutomapHostsOnResolve\|^TransPort\|#ciboulette\)" > /tmp/torrc

# nueva configuracion
echo "VirtualAddrNetwork 10.192.0.0/10 #ciboulette
AutomapHostsOnResolve 1 #ciboulette
TransPort 9040 #ciboulette
DNSPort 53 #ciboulette" >> /tmp/torrc

mkdir /var/lib/tor/ciboulette/

# incio del servicio oculto
echo "HiddenServiceDir /var/lib/tor/ciboulette/ #ciboulette
HiddenServicePort 80 127.0.0.1:4232   #ciboulette
HiddenServicePort 5222 127.0.0.1:5222 #ciboulette
HiddenServicePort 5269 127.0.0.1:5269 #ciboulette" >> /tmp/torrc

# copia la configuracion de tor
cat /tmp/torrc > /etc/tor/torrc

# reincia tor
service tor restart 2> /dev/null

sleep 10

# -------------------- restaura el ciboulette de cibuolette -----------------------

# recupera el backup del servicio oculto
tar -xf /tmp/ciboulette-backup.tar --directory /var/lib/tor/ciboulette/

# nombre de tu nodo
cat "/var/lib/tor/ciboulette/hostname" > /tmp/hostname

# -------------------- configuraciones -----------------------

# redirecciona los DNS a Tor

grep -v "ciboulette" /etc/rc.local > /etc/rc.local
sed -e "s,^exit*$,/usr/local/bin/ciboulette iptables\nexit 0," -i /etc/rc.local

# ------------------- instalacion de ciboulette ---------------------------

# instala ciboulette

cp ciboulette /usr/local/bin/ 2> /dev/null
cp ciboulette.png /usr/share/pixmaps/ 2> /dev/null
cp ciboulette.desktop /usr/share/applications/ 2> /dev/null

# parche para versiones de nanoblogger 3.4.2

cp -r lang /usr/share/nanoblogger/ 2> /dev/null
cp plugins/markdown.sh /usr/share/nanoblogger/plugins/page/format/markdown.sh
cp plugins/markdown.sh /usr/share/nanoblogger/plugins/entry/format/markdown.sh

# ------------------- prosody ---------------------------

# toma el usuario

HOST=$(cat /var/lib/tor/ciboulette/hostname)

if [ ! "$HOST" ] && echo 'Error. No se pudo generar el .onion, tal vez tu `/etc/tor/torrc` no este configurado correctamente. Modificar y volver a correr la instalación.' && exit

# generar una nueva instalación con un certificado copado

VIRTUAL="Host"
if [ ! -f /etc/prosody/certs/$HOST.key ]; then
	if [ "$(prosodyctl | grep cert )" ]; then
		prosodyctl cert generate $HOST && VIRTUAL="VirtualHost"
	else
		echo -e "AU\n\n\n\n\n\n\n" | \
		openssl req -new -x509 -days 365 -nodes -out "/etc/prosody/certs/$HOST.crt" -newkey rsa:4096 -keyout "/etc/prosody/certs/$HOST.key"
	fi
fi

# guarda el certificado asi no tenemos que aceptarlo mas :D

cp /etc/prosody/certs/$HOST.crt /etc/ssl/certs/ 2> /dev/null

# graba el nuevo host de prosody
echo "$VIRTUAL \"$HOST\"
ssl = {
  key = \"/etc/prosody/certs/$HOST.key\";
  certificate = \"/etc/prosody/certs/$HOST.crt\";
}" > /etc/prosody/conf.avail/$HOST.cfg.lua
cp /etc/prosody/conf.avail/$HOST.cfg.lua /etc/prosody/conf.d/$HOST.cfg.lua 2> /dev/null

# reinicie el servidor de prosody

prosodyctl stop
prosodyctl start
